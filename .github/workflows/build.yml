name: Frontend Build CI Pipeline

on:
  push:
    branches: [ main, develop, "feature/*" ]
  pull_request:
    branches: [ main, develop, "feature/*" ]

env:
  NODE_VERSION: '18'

jobs:
  build:
    name: Build and Analyze
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'

      - name: Install Dependencies
        run: npm ci

      - name: Build Application
        run: npm run build

      - name: Bundle Analysis
        run: |
          npm install -g webpack-bundle-analyzer
          npx webpack-bundle-analyzer dist/stats.json

      - name: Check Bundle Size
        run: |
          npm install bundlesize
          npx bundlesize

      - name: Archive Build Artifacts
        uses: actions/upload-artifact@v4
        with:
          name: build-artifacts
          path: |
            dist/
            dist-stats.json

  security-scan:
    name: Security Scanning
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}

      - name: Run npm audit
        run: |
          npm audit --audit-level=high --json > npm-audit-results.json || echo "Security issues detected"
          cat npm-audit-results.json

      - name: Dependency Vulnerability Scan
        uses: snyk/actions/node@master
        continue-on-error: true
        env:
          SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }}
        with:
          args: --severity-threshold=high

  performance-budget:
    name: Performance Budget Check
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'

      - name: Install Dependencies
        run: npm ci

      - name: Build and Check Performance Budget
        run: |
          npm run build
          npx performance-budget check bundlebudget.config.json

      - name: Notify Slack on Build Success
        uses: rtCamp/action-slack-notify@v2
        env:
          SLACK_WEBHOOK: ${{ secrets.SLACK_WEBHOOK_URL }}
          SLACK_MESSAGE: "âœ… Build and performance checks completed for ${{ github.ref }} branch!"